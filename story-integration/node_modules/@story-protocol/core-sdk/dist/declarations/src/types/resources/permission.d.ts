import { Address, Hex, WalletClient } from "viem";
import { TxOptions } from "../options.js";
import { EncodedTxData, SimpleWalletClient } from "../../abi/generated.js";
export type SetPermissionsRequest = {
    ipId: Address;
    signer: Address;
    to: Address;
    permission: AccessPermission;
    func?: string;
    txOptions?: TxOptions;
};
export type SetPermissionsResponse = {
    txHash?: string;
    encodedTxData?: EncodedTxData;
    success?: boolean;
};
export type SetAllPermissionsRequest = {
    ipId: Address;
    signer: Address;
    permission: AccessPermission;
    txOptions?: TxOptions;
};
/**
 * Permission level
 * @enum {number}
 **/
export declare enum AccessPermission {
    ABSTAIN = 0,
    ALLOW = 1,
    DENY = 2
}
export type CreateSetPermissionSignatureRequest = {
    deadline?: bigint | number | string;
} & SetPermissionsRequest;
export type SetBatchPermissionsRequest = {
    permissions: Omit<SetPermissionsRequest, "txOptions">[];
    txOptions?: TxOptions;
};
export type CreateBatchPermissionSignatureRequest = {
    ipId: Address;
    deadline?: bigint | number | string;
} & SetBatchPermissionsRequest;
export type PermissionSignatureRequest = {
    ipId: Address;
    state: Hex;
    deadline: string | number | bigint;
    wallet: WalletClient;
    chainId: string | number | bigint;
    permissions: Omit<SetPermissionsRequest, "txOptions">[];
};
export type SignatureRequest = {
    state: Hex;
    to: Address;
    encodeData: Hex;
    wallet: SimpleWalletClient;
    verifyingContract: Address;
    deadline: bigint | number | string;
    chainId: number | bigint | string;
};
export type SignatureResponse = {
    signature: Hex;
    nonce: Hex;
};
//# sourceMappingURL=permission.d.ts.map